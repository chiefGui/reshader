var t,e=(t=require("color"))&&"object"==typeof t&&"default"in t?t.default:t;function r(t,e){return t.replace(/%s/,e)}var o="\nYou are passing an invalid or malformed color string (%s).\nTo learn more about our algorithm for hexadecimal color strings,\nplease refer to https://stackoverflow.com/a/9682781.\n",n="\nYou passed some invalid options when generating shades (%s).\nPlease refer to https://github.com/chiefGui/reshader to know more\nabout the available, valid options.\n",a=.3;function i(t,e){if(void 0===e&&(e=s),!/^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(t))throw new Error(r(o,'"'+t.toString()+'"'));var a,i,u=(a=Object.keys(e),i=Object.keys(s),0===a.length?[]:a.filter(function(t){return!i.includes(t)}));if(u.length>0)throw new Error(r(n,'"'+u.join(", ")+'"'));var h=l(t,e.contrastRatio),f=l(h,e.contrastRatio),d=l(f,e.contrastRatio),g=c(t,e.contrastRatio),p=c(g,e.contrastRatio);return{darkest:d,darker:f,dark:h,neutral:t,light:g,lighter:p,lightest:c(p,e.contrastRatio)}}var s={contrastRatio:a};function c(t,r){return void 0===r&&(r=a),e(t).lighten(r).hex()}function l(t,r){return void 0===r&&(r=a),e(t).darken(r).hex()}exports.createShades=i,exports.createPalette=function(t){return Object.keys(t).reduce(function(e,r){var o,n="string"==typeof(o=t[r])?{hex:o,options:{}}:o;return e[r]=i(n.hex,n.options),e},{})};
//# sourceMappingURL=reshader.js.map
